// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/knaka/binc/lib (interfaces: MyDep)
//
// Generated by this command:
//
//	mockgen -package=mock -destination mock/main.go . MyDep
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMyDep is a mock of MyDep interface.
type MockMyDep struct {
	ctrl     *gomock.Controller
	recorder *MockMyDepMockRecorder
}

// MockMyDepMockRecorder is the mock recorder for MockMyDep.
type MockMyDepMockRecorder struct {
	mock *MockMyDep
}

// NewMockMyDep creates a new mock instance.
func NewMockMyDep(ctrl *gomock.Controller) *MockMyDep {
	mock := &MockMyDep{ctrl: ctrl}
	mock.recorder = &MockMyDepMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyDep) EXPECT() *MockMyDepMockRecorder {
	return m.recorder
}

// RandIntN mocks base method.
func (m *MockMyDep) RandIntN(arg0 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandIntN", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// RandIntN indicates an expected call of RandIntN.
func (mr *MockMyDepMockRecorder) RandIntN(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandIntN", reflect.TypeOf((*MockMyDep)(nil).RandIntN), arg0)
}
